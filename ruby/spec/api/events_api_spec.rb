=begin
#FoneStorm API 2.4.0 (Thunder)

#FracTEL's Middleware API

OpenAPI spec version: 2.4.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::EventsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EventsApi' do
  before do
    # run before each test
    @instance = SwaggerClient::EventsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EventsApi' do
    it 'should create an instance of EventsApi' do
      expect(@instance).to be_instance_of(SwaggerClient::EventsApi)
    end
  end

  # unit tests for create_event
  # Create Event
  # Create an event.
  # @param id Event id
  # @param organizer_contact_id Event organizer contact id
  # @param start_time Event start time
  # @param end_time Event end time
  # @param title Event title
  # @param attendees Event attendee contact ids
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description Event description
  # @option opts [String] :location Event location
  # @option opts [String] :status Event status
  # @option opts [Float] :reschedule_count Event reschedule count
  # @return [InlineResponse2012]
  describe 'create_event test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_event_0
  # Create Event
  # Create an event.
  # @param id Event id
  # @param organizer_contact_id Event organizer contact id
  # @param start_time Event start time
  # @param end_time Event end time
  # @param title Event title
  # @param attendees Event attendee contact ids
  # @param [Hash] opts the optional parameters
  # @option opts [String] :description Event description
  # @option opts [String] :location Event location
  # @option opts [String] :status Event status
  # @option opts [Float] :reschedule_count Event reschedule count
  # @return [InlineResponse2012]
  describe 'create_event_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_event
  # Delete Event
  # Delete a single event.
  # @param id Event id
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2012]
  describe 'delete_event test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_event_0
  # Delete Event
  # Delete a single event.
  # @param id Event id
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2012]
  describe 'delete_event_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_event
  # Get Event
  # Get information about an event.
  # @param id Event id
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2012]
  describe 'get_event test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_event_0
  # Get Event
  # Get information about an event.
  # @param id Event id
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2012]
  describe 'get_event_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_events
  # Get Events
  # Get a list of all events.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2001]
  describe 'get_events test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_events_0
  # Get Events
  # Get a list of all events.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2001]
  describe 'get_events_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_event
  # Update Event
  # Update an event.
  # @param id Event id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organizer_contact_id Event organizer contact id
  # @option opts [Date] :start_time Event start time
  # @option opts [Date] :end_time Event end time
  # @option opts [String] :title Event title
  # @option opts [String] :description Event description
  # @option opts [String] :location Event location
  # @option opts [Array<String>] :attendees Event attendee contact ids
  # @option opts [String] :status Event status
  # @option opts [Float] :reschedule_count Event reschedule count
  # @return [InlineResponse2012]
  describe 'update_event test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_event_0
  # Update Event
  # Update an event.
  # @param id Event id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :organizer_contact_id Event organizer contact id
  # @option opts [Date] :start_time Event start time
  # @option opts [Date] :end_time Event end time
  # @option opts [String] :title Event title
  # @option opts [String] :description Event description
  # @option opts [String] :location Event location
  # @option opts [Array<String>] :attendees Event attendee contact ids
  # @option opts [String] :status Event status
  # @option opts [Float] :reschedule_count Event reschedule count
  # @return [InlineResponse2012]
  describe 'update_event_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
