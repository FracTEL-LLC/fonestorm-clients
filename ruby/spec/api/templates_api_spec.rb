=begin
#FoneStorm API 2.4.0 (Thunder)

#FracTEL's Middleware API

OpenAPI spec version: 2.4.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::TemplatesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TemplatesApi' do
  before do
    # run before each test
    @instance = SwaggerClient::TemplatesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TemplatesApi' do
    it 'should create an instance of TemplatesApi' do
      expect(@instance).to be_instance_of(SwaggerClient::TemplatesApi)
    end
  end

  # unit tests for create_template
  # Create Template
  # Create a template
  # @param name Template name
  # @param type Template type
  # @param body Template body
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2019]
  describe 'create_template test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_template_0
  # Create Template
  # Create a template
  # @param name Template name
  # @param type Template type
  # @param body Template body
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2019]
  describe 'create_template_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_template
  # Delete Template
  # Delete a template.
  # @param id Template id
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2019]
  describe 'delete_template test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_template_0
  # Delete Template
  # Delete a template.
  # @param id Template id
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2019]
  describe 'delete_template_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_template
  # Get Template
  # Get information about a template.
  # @param id Template id
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :attributes Include all attributes
  # @return [InlineResponse2019]
  describe 'get_template test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_template_0
  # Get Template
  # Get information about a template.
  # @param id Template id
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :attributes Include all attributes
  # @return [InlineResponse2019]
  describe 'get_template_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_templates
  # Get Templates
  # Get a list of templates.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2006]
  describe 'get_templates test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_templates_0
  # Get Templates
  # Get a list of templates.
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2006]
  describe 'get_templates_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_template
  # Update Template
  # Update a template.
  # @param id Template id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Template name
  # @option opts [String] :type Template type
  # @option opts [String] :body Template body
  # @return [InlineResponse2019]
  describe 'update_template test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_template_0
  # Update Template
  # Update a template.
  # @param id Template id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Template name
  # @option opts [String] :type Template type
  # @option opts [String] :body Template body
  # @return [InlineResponse2019]
  describe 'update_template_0 test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
