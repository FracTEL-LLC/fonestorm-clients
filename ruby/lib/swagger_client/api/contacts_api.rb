=begin
#FoneStorm API 2.2.0 (Breeze)

#FracTEL's Middleware API

OpenAPI spec version: 2.2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.2.3

=end

require "uri"

module SwaggerClient
  class ContactsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Create Contact
    # Create a contact.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :email Contact email address
    # @option opts [String] :first_name Contact first name
    # @option opts [String] :last_name Contact last name
    # @option opts [BOOLEAN] :opt_in_call Contact opt-in for calls
    # @option opts [BOOLEAN] :opt_in_email Contact opt-in for emails
    # @option opts [BOOLEAN] :opt_in_fax Contact opt-in for faxes
    # @option opts [BOOLEAN] :opt_in_message Contact opt-in for messages
    # @option opts [String] :phone Contact phone number
    # @return [InlineResponse2013]
    def create_contact(opts = {})
      data, _status_code, _headers = create_contact_with_http_info(opts)
      return data
    end

    # Create Contact
    # Create a contact.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :email Contact email address
    # @option opts [String] :first_name Contact first name
    # @option opts [String] :last_name Contact last name
    # @option opts [BOOLEAN] :opt_in_call Contact opt-in for calls
    # @option opts [BOOLEAN] :opt_in_email Contact opt-in for emails
    # @option opts [BOOLEAN] :opt_in_fax Contact opt-in for faxes
    # @option opts [BOOLEAN] :opt_in_message Contact opt-in for messages
    # @option opts [String] :phone Contact phone number
    # @return [Array<(InlineResponse2013, Fixnum, Hash)>] InlineResponse2013 data, response status code and response headers
    def create_contact_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ContactsApi.create_contact ..."
      end
      if @api_client.config.client_side_validation && !opts[:'phone'].nil? && opts[:'phone'].to_s.length > 11
        fail ArgumentError, 'invalid value for "opts[:"phone"]" when calling ContactsApi.create_contact, the character length must be smaller than or equal to 11.'
      end

      if @api_client.config.client_side_validation && !opts[:'phone'].nil? && opts[:'phone'].to_s.length < 10
        fail ArgumentError, 'invalid value for "opts[:"phone"]" when calling ContactsApi.create_contact, the character length must be great than or equal to 10.'
      end

      # resource path
      local_var_path = "/contacts"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["email"] = opts[:'email'] if !opts[:'email'].nil?
      form_params["first_name"] = opts[:'first_name'] if !opts[:'first_name'].nil?
      form_params["last_name"] = opts[:'last_name'] if !opts[:'last_name'].nil?
      form_params["opt_in_call"] = opts[:'opt_in_call'] if !opts[:'opt_in_call'].nil?
      form_params["opt_in_email"] = opts[:'opt_in_email'] if !opts[:'opt_in_email'].nil?
      form_params["opt_in_fax"] = opts[:'opt_in_fax'] if !opts[:'opt_in_fax'].nil?
      form_params["opt_in_message"] = opts[:'opt_in_message'] if !opts[:'opt_in_message'].nil?
      form_params["phone"] = opts[:'phone'] if !opts[:'phone'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['jwt']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2013')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContactsApi#create_contact\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create Contact
    # Create a contact.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :email Contact email address
    # @option opts [String] :first_name Contact first name
    # @option opts [String] :last_name Contact last name
    # @option opts [BOOLEAN] :opt_in_call Contact opt-in for calls
    # @option opts [BOOLEAN] :opt_in_email Contact opt-in for emails
    # @option opts [BOOLEAN] :opt_in_fax Contact opt-in for faxes
    # @option opts [BOOLEAN] :opt_in_message Contact opt-in for messages
    # @option opts [String] :phone Contact phone number
    # @return [InlineResponse2013]
    def create_contact_0(opts = {})
      data, _status_code, _headers = create_contact_0_with_http_info(opts)
      return data
    end

    # Create Contact
    # Create a contact.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :email Contact email address
    # @option opts [String] :first_name Contact first name
    # @option opts [String] :last_name Contact last name
    # @option opts [BOOLEAN] :opt_in_call Contact opt-in for calls
    # @option opts [BOOLEAN] :opt_in_email Contact opt-in for emails
    # @option opts [BOOLEAN] :opt_in_fax Contact opt-in for faxes
    # @option opts [BOOLEAN] :opt_in_message Contact opt-in for messages
    # @option opts [String] :phone Contact phone number
    # @return [Array<(InlineResponse2013, Fixnum, Hash)>] InlineResponse2013 data, response status code and response headers
    def create_contact_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ContactsApi.create_contact_0 ..."
      end
      if @api_client.config.client_side_validation && !opts[:'phone'].nil? && opts[:'phone'].to_s.length > 11
        fail ArgumentError, 'invalid value for "opts[:"phone"]" when calling ContactsApi.create_contact_0, the character length must be smaller than or equal to 11.'
      end

      if @api_client.config.client_side_validation && !opts[:'phone'].nil? && opts[:'phone'].to_s.length < 10
        fail ArgumentError, 'invalid value for "opts[:"phone"]" when calling ContactsApi.create_contact_0, the character length must be great than or equal to 10.'
      end

      # resource path
      local_var_path = "/contacts"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params["email"] = opts[:'email'] if !opts[:'email'].nil?
      form_params["first_name"] = opts[:'first_name'] if !opts[:'first_name'].nil?
      form_params["last_name"] = opts[:'last_name'] if !opts[:'last_name'].nil?
      form_params["opt_in_call"] = opts[:'opt_in_call'] if !opts[:'opt_in_call'].nil?
      form_params["opt_in_email"] = opts[:'opt_in_email'] if !opts[:'opt_in_email'].nil?
      form_params["opt_in_fax"] = opts[:'opt_in_fax'] if !opts[:'opt_in_fax'].nil?
      form_params["opt_in_message"] = opts[:'opt_in_message'] if !opts[:'opt_in_message'].nil?
      form_params["phone"] = opts[:'phone'] if !opts[:'phone'].nil?

      # http body (model)
      post_body = nil
      auth_names = ['jwt']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2013')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContactsApi#create_contact_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Contacts
    # Get a list of all contacts.
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse200]
    def get_contacts(opts = {})
      data, _status_code, _headers = get_contacts_with_http_info(opts)
      return data
    end

    # Get Contacts
    # Get a list of all contacts.
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse200, Fixnum, Hash)>] InlineResponse200 data, response status code and response headers
    def get_contacts_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ContactsApi.get_contacts ..."
      end
      # resource path
      local_var_path = "/contacts"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['jwt']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse200')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContactsApi#get_contacts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get Contacts
    # Get a list of all contacts.
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse200]
    def get_contacts_0(opts = {})
      data, _status_code, _headers = get_contacts_0_with_http_info(opts)
      return data
    end

    # Get Contacts
    # Get a list of all contacts.
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse200, Fixnum, Hash)>] InlineResponse200 data, response status code and response headers
    def get_contacts_0_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ContactsApi.get_contacts_0 ..."
      end
      # resource path
      local_var_path = "/contacts"

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['jwt']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse200')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContactsApi#get_contacts_0\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
