/* 
 * FracTEL API 2.1.0
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing FonenumbersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FonenumbersApiTests
    {
        private FonenumbersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FonenumbersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FonenumbersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FonenumbersApi
            //Assert.IsInstanceOfType(typeof(FonenumbersApi), instance, "instance is a FonenumbersApi");
        }

        
        /// <summary>
        /// Test DeleteFonenumbersFonenumber
        /// </summary>
        [Test]
        public void DeleteFonenumbersFonenumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fonenumber = null;
            //var response = instance.DeleteFonenumbersFonenumber(fonenumber);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetFonenumbers
        /// </summary>
        [Test]
        public void GetFonenumbersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string filter = null;
            //var response = instance.GetFonenumbers(filter);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test GetFonenumbersFonenumber
        /// </summary>
        [Test]
        public void GetFonenumbersFonenumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fonenumber = null;
            //var response = instance.GetFonenumbersFonenumber(fonenumber);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test PostFonenumbers
        /// </summary>
        [Test]
        public void PostFonenumbersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string areaCode = null;
            //var response = instance.PostFonenumbers(areaCode);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
        /// <summary>
        /// Test PutFonenumbersFonenumber
        /// </summary>
        [Test]
        public void PutFonenumbersFonenumberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string fonenumber = null;
            //string type = null;
            //string value = null;
            //string urlMethod = null;
            //string urlUsername = null;
            //string urlPassword = null;
            //var response = instance.PutFonenumbersFonenumber(fonenumber, type, value, urlMethod, urlUsername, urlPassword);
            //Assert.IsInstanceOf<string> (response, "response is string");
        }
        
    }

}
