/**
 * FoneStorm API 2.4.0 (Thunder)
 * FracTEL's Middleware API
 *
 * OpenAPI spec version: 2.4.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FoneStormApi240Thunder);
  }
}(this, function(expect, FoneStormApi240Thunder) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FoneStormApi240Thunder.ConferencesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConferencesApi', function() {
    describe('createConference', function() {
      it('should call createConference successfully', function(done) {
        //uncomment below and update the code to test createConference
        //instance.createConference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createConference_0', function() {
      it('should call createConference_0 successfully', function(done) {
        //uncomment below and update the code to test createConference_0
        //instance.createConference_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteConference', function() {
      it('should call deleteConference successfully', function(done) {
        //uncomment below and update the code to test deleteConference
        //instance.deleteConference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteConference_0', function() {
      it('should call deleteConference_0 successfully', function(done) {
        //uncomment below and update the code to test deleteConference_0
        //instance.deleteConference_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConference', function() {
      it('should call getConference successfully', function(done) {
        //uncomment below and update the code to test getConference
        //instance.getConference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConferenceFonenumbers', function() {
      it('should call getConferenceFonenumbers successfully', function(done) {
        //uncomment below and update the code to test getConferenceFonenumbers
        //instance.getConferenceFonenumbers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConferenceFonenumbers_0', function() {
      it('should call getConferenceFonenumbers_0 successfully', function(done) {
        //uncomment below and update the code to test getConferenceFonenumbers_0
        //instance.getConferenceFonenumbers_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConference_0', function() {
      it('should call getConference_0 successfully', function(done) {
        //uncomment below and update the code to test getConference_0
        //instance.getConference_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConferences', function() {
      it('should call getConferences successfully', function(done) {
        //uncomment below and update the code to test getConferences
        //instance.getConferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getConferences_0', function() {
      it('should call getConferences_0 successfully', function(done) {
        //uncomment below and update the code to test getConferences_0
        //instance.getConferences_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConference', function() {
      it('should call updateConference successfully', function(done) {
        //uncomment below and update the code to test updateConference
        //instance.updateConference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateConference_0', function() {
      it('should call updateConference_0 successfully', function(done) {
        //uncomment below and update the code to test updateConference_0
        //instance.updateConference_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
