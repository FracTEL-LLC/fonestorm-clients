/**
 * FoneStorm API 2.4.0 (Thunder)
 * FracTEL's Middleware API
 *
 * OpenAPI spec version: 2.4.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.FoneStormApi240Thunder) {
      root.FoneStormApi240Thunder = {};
    }
    root.FoneStormApi240Thunder.Conference = factory(root.FoneStormApi240Thunder.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Conference model module.
   * @module model/Conference
   * @version 2.4.0
   */

  /**
   * Constructs a new <code>Conference</code>.
   * @alias module:model/Conference
   * @class
   * @param id {String} Unique identifier of conference.
   */
  var exports = function(id) {
    var _this = this;

    _this['id'] = id;






  };

  /**
   * Constructs a <code>Conference</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Conference} obj Optional instance to populate.
   * @return {module:model/Conference} The populated <code>Conference</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('end_time')) {
        obj['end_time'] = ApiClient.convertToType(data['end_time'], 'String');
      }
      if (data.hasOwnProperty('label')) {
        obj['label'] = ApiClient.convertToType(data['label'], 'String');
      }
      if (data.hasOwnProperty('start_time')) {
        obj['start_time'] = ApiClient.convertToType(data['start_time'], 'String');
      }
      if (data.hasOwnProperty('before_message')) {
        obj['before_message'] = ApiClient.convertToType(data['before_message'], 'String');
      }
      if (data.hasOwnProperty('after_message')) {
        obj['after_message'] = ApiClient.convertToType(data['after_message'], 'String');
      }
      if (data.hasOwnProperty('max_members')) {
        obj['max_members'] = ApiClient.convertToType(data['max_members'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Unique identifier of conference.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * End time and date of conference.
   * @member {String} end_time
   */
  exports.prototype['end_time'] = undefined;
  /**
   * Label for conference.
   * @member {String} label
   */
  exports.prototype['label'] = undefined;
  /**
   * Start time and date of conference.
   * @member {String} start_time
   */
  exports.prototype['start_time'] = undefined;
  /**
   * Message to play before conference start time.
   * @member {String} before_message
   */
  exports.prototype['before_message'] = undefined;
  /**
   * Message to play after conference end time.
   * @member {String} after_message
   */
  exports.prototype['after_message'] = undefined;
  /**
   * Maximum number of allowed conference attendees.
   * @member {Number} max_members
   */
  exports.prototype['max_members'] = undefined;



  return exports;
}));


