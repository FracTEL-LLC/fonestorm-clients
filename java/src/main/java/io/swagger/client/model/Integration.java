/*
 * FoneStorm API 2.4.0 (Thunder)
 * FracTEL's Middleware API
 *
 * OpenAPI spec version: 2.4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.IntegrationToken;
import java.io.IOException;

/**
 * Integration
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-22T07:44:00.946-07:00")
public class Integration {
  @SerializedName("id")
  private String id = null;

  @SerializedName("account_id")
  private String accountId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("token")
  private IntegrationToken token = null;

  public Integration id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of integration.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique identifier of integration.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Integration accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Unique identifier of associated account.
   * @return accountId
  **/
  @ApiModelProperty(value = "Unique identifier of associated account.")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public Integration name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Integration service name.
   * @return name
  **/
  @ApiModelProperty(value = "Integration service name.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Integration slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Integration slug name.
   * @return slug
  **/
  @ApiModelProperty(value = "Integration slug name.")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public Integration token(IntegrationToken token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(value = "")
  public IntegrationToken getToken() {
    return token;
  }

  public void setToken(IntegrationToken token) {
    this.token = token;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Integration integration = (Integration) o;
    return Objects.equals(this.id, integration.id) &&
        Objects.equals(this.accountId, integration.accountId) &&
        Objects.equals(this.name, integration.name) &&
        Objects.equals(this.slug, integration.slug) &&
        Objects.equals(this.token, integration.token);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accountId, name, slug, token);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Integration {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

