/*
 * FoneStorm API 2.4.0 (Thunder)
 * FracTEL's Middleware API
 *
 * OpenAPI spec version: 2.4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Survey
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-01-22T07:44:00.946-07:00")
public class Survey {
  @SerializedName("account_id")
  private String accountId = null;

  @SerializedName("contacts")
  private  contacts = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("questions")
  private  questions = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("updated_at")
  private String updatedAt = null;

  public Survey accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Identifier of associated account.
   * @return accountId
  **/
  @ApiModelProperty(value = "Identifier of associated account.")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public Survey contacts( contacts) {
    this.contacts = contacts;
    return this;
  }

  public Survey addContactsItem( contactsItem) {
    if (this.contacts == null) {
      this.contacts = ;
    }
    this.contacts.add(contactsItem);
    return this;
  }

   /**
   * Array of Contact objects.
   * @return contacts
  **/
  @ApiModelProperty(value = "Array of Contact objects.")
  public  getContacts() {
    return contacts;
  }

  public void setContacts( contacts) {
    this.contacts = contacts;
  }

  public Survey createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Time and date of creation.
   * @return createdAt
  **/
  @ApiModelProperty(value = "Time and date of creation.")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Survey id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of survey.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique identifier of survey.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Survey questions( questions) {
    this.questions = questions;
    return this;
  }

  public Survey addQuestionsItem( questionsItem) {
    if (this.questions == null) {
      this.questions = ;
    }
    this.questions.add(questionsItem);
    return this;
  }

   /**
   * Array of Survey Question objects.
   * @return questions
  **/
  @ApiModelProperty(value = "Array of Survey Question objects.")
  public  getQuestions() {
    return questions;
  }

  public void setQuestions( questions) {
    this.questions = questions;
  }

  public Survey title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title of survey.
   * @return title
  **/
  @ApiModelProperty(value = "Title of survey.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Survey updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Time and date of last update.
   * @return updatedAt
  **/
  @ApiModelProperty(value = "Time and date of last update.")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Survey survey = (Survey) o;
    return Objects.equals(this.accountId, survey.accountId) &&
        Objects.equals(this.contacts, survey.contacts) &&
        Objects.equals(this.createdAt, survey.createdAt) &&
        Objects.equals(this.id, survey.id) &&
        Objects.equals(this.questions, survey.questions) &&
        Objects.equals(this.title, survey.title) &&
        Objects.equals(this.updatedAt, survey.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, contacts, createdAt, id, questions, title, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Survey {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    questions: ").append(toIndentedString(questions)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

