/*
 * FoneStorm API 2.2.0 (Breeze)
 * FracTEL's Middleware API
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Email
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-20T17:24:18.894-07:00")
public class Email {
  @SerializedName("id")
  private String id = null;

  @SerializedName("from")
  private String from = null;

  @SerializedName("body")
  private String body = null;

  @SerializedName("send_individually")
  private Boolean sendIndividually = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("time")
  private String time = null;

  @SerializedName("to")
  private  to = null;

  public Email id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of email.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique identifier of email.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Email from(String from) {
    this.from = from;
    return this;
  }

   /**
   * Email address of sender.
   * @return from
  **/
  @ApiModelProperty(value = "Email address of sender.")
  public String getFrom() {
    return from;
  }

  public void setFrom(String from) {
    this.from = from;
  }

  public Email body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Body of message.
   * @return body
  **/
  @ApiModelProperty(value = "Body of message.")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public Email sendIndividually(Boolean sendIndividually) {
    this.sendIndividually = sendIndividually;
    return this;
  }

   /**
   * Send individually or as single email.
   * @return sendIndividually
  **/
  @ApiModelProperty(value = "Send individually or as single email.")
  public Boolean getSendIndividually() {
    return sendIndividually;
  }

  public void setSendIndividually(Boolean sendIndividually) {
    this.sendIndividually = sendIndividually;
  }

  public Email subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Subject of email.
   * @return subject
  **/
  @ApiModelProperty(value = "Subject of email.")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public Email time(String time) {
    this.time = time;
    return this;
  }

   /**
   * Time to send.
   * @return time
  **/
  @ApiModelProperty(value = "Time to send.")
  public String getTime() {
    return time;
  }

  public void setTime(String time) {
    this.time = time;
  }

  public Email to( to) {
    this.to = to;
    return this;
  }

  public Email addToItem( toItem) {
    if (this.to == null) {
      this.to = ;
    }
    this.to.add(toItem);
    return this;
  }

   /**
   * Array of email addresses to mail.
   * @return to
  **/
  @ApiModelProperty(value = "Array of email addresses to mail.")
  public  getTo() {
    return to;
  }

  public void setTo( to) {
    this.to = to;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Email email = (Email) o;
    return Objects.equals(this.id, email.id) &&
        Objects.equals(this.from, email.from) &&
        Objects.equals(this.body, email.body) &&
        Objects.equals(this.sendIndividually, email.sendIndividually) &&
        Objects.equals(this.subject, email.subject) &&
        Objects.equals(this.time, email.time) &&
        Objects.equals(this.to, email.to);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, from, body, sendIndividually, subject, time, to);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Email {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    sendIndividually: ").append(toIndentedString(sendIndividually)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

