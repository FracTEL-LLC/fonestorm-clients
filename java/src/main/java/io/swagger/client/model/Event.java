/*
 * FoneStorm API 2.2.0 (Breeze)
 * FracTEL's Middleware API
 *
 * OpenAPI spec version: 2.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Event
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-12-20T17:03:53.264-07:00")
public class Event {
  @SerializedName("account_id")
  private String accountId = null;

  @SerializedName("attendees")
  private  attendees = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("end_time")
  private String endTime = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("reschedule_count")
  private Integer rescheduleCount = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("start_time")
  private String startTime = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("updated_at")
  private String updatedAt = null;

  public Event accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Identifier of associated account.
   * @return accountId
  **/
  @ApiModelProperty(value = "Identifier of associated account.")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public Event attendees( attendees) {
    this.attendees = attendees;
    return this;
  }

  public Event addAttendeesItem( attendeesItem) {
    if (this.attendees == null) {
      this.attendees = ;
    }
    this.attendees.add(attendeesItem);
    return this;
  }

   /**
   * Array of attendee Contact objects.
   * @return attendees
  **/
  @ApiModelProperty(value = "Array of attendee Contact objects.")
  public  getAttendees() {
    return attendees;
  }

  public void setAttendees( attendees) {
    this.attendees = attendees;
  }

  public Event createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Date and time of creation.
   * @return createdAt
  **/
  @ApiModelProperty(value = "Date and time of creation.")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public Event description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of event.
   * @return description
  **/
  @ApiModelProperty(value = "Description of event.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Event endTime(String endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * End date and time.
   * @return endTime
  **/
  @ApiModelProperty(value = "End date and time.")
  public String getEndTime() {
    return endTime;
  }

  public void setEndTime(String endTime) {
    this.endTime = endTime;
  }

  public Event id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of event.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Unique identifier of event.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Event location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Location of event.
   * @return location
  **/
  @ApiModelProperty(value = "Location of event.")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public Event rescheduleCount(Integer rescheduleCount) {
    this.rescheduleCount = rescheduleCount;
    return this;
  }

   /**
   * Reschedule count of event.
   * @return rescheduleCount
  **/
  @ApiModelProperty(value = "Reschedule count of event.")
  public Integer getRescheduleCount() {
    return rescheduleCount;
  }

  public void setRescheduleCount(Integer rescheduleCount) {
    this.rescheduleCount = rescheduleCount;
  }

  public Event status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Status of event.
   * @return status
  **/
  @ApiModelProperty(value = "Status of event.")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Event startTime(String startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Start date and time.
   * @return startTime
  **/
  @ApiModelProperty(value = "Start date and time.")
  public String getStartTime() {
    return startTime;
  }

  public void setStartTime(String startTime) {
    this.startTime = startTime;
  }

  public Event title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title of event.
   * @return title
  **/
  @ApiModelProperty(value = "Title of event.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Event updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Date and time of last update.
   * @return updatedAt
  **/
  @ApiModelProperty(value = "Date and time of last update.")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Event event = (Event) o;
    return Objects.equals(this.accountId, event.accountId) &&
        Objects.equals(this.attendees, event.attendees) &&
        Objects.equals(this.createdAt, event.createdAt) &&
        Objects.equals(this.description, event.description) &&
        Objects.equals(this.endTime, event.endTime) &&
        Objects.equals(this.id, event.id) &&
        Objects.equals(this.location, event.location) &&
        Objects.equals(this.rescheduleCount, event.rescheduleCount) &&
        Objects.equals(this.status, event.status) &&
        Objects.equals(this.startTime, event.startTime) &&
        Objects.equals(this.title, event.title) &&
        Objects.equals(this.updatedAt, event.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, attendees, createdAt, description, endTime, id, location, rescheduleCount, status, startTime, title, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Event {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    attendees: ").append(toIndentedString(attendees)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    rescheduleCount: ").append(toIndentedString(rescheduleCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

