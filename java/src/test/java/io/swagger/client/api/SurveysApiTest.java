/*
 * FoneStorm API 2.4.0 (Thunder)
 * FracTEL's Middleware API
 *
 * OpenAPI spec version: 2.4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Error;
import io.swagger.client.model.InlineResponse20013;
import io.swagger.client.model.InlineResponse20014;
import io.swagger.client.model.InlineResponse20016;
import io.swagger.client.model.InlineResponse2003;
import io.swagger.client.model.InlineResponse2004;
import io.swagger.client.model.InlineResponse20115;
import io.swagger.client.model.InlineResponse20116;
import io.swagger.client.model.InlineResponse20117;
import io.swagger.client.model.InlineResponse2016;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SurveysApi
 */
@Ignore
public class SurveysApiTest {

    private final SurveysApi api = new SurveysApi();

    
    /**
     * Create Survey
     *
     * Create a survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSurveyTest() throws ApiException {
        String title = null;
        List<String> contacts = null;
        InlineResponse2016 response = api.createSurvey(title, contacts);

        // TODO: test validations
    }
    
    /**
     * Create Survey Question
     *
     * Create a question in a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSurveyQuestionTest() throws ApiException {
        String id = null;
        String question = null;
        String attributeName = null;
        InlineResponse20115 response = api.createSurveyQuestion(id, question, attributeName);

        // TODO: test validations
    }
    
    /**
     * Create Survey Question Choice
     *
     * Create a question choice for a given survey question.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSurveyQuestionChoiceTest() throws ApiException {
        String id = null;
        String qid = null;
        String type = null;
        String label = null;
        InlineResponse20117 response = api.createSurveyQuestionChoice(id, qid, type, label);

        // TODO: test validations
    }
    
    /**
     * Create Survey Question Choice
     *
     * Create a question choice for a given survey question.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSurveyQuestionChoice_0Test() throws ApiException {
        String id = null;
        String qid = null;
        String type = null;
        String label = null;
        InlineResponse20117 response = api.createSurveyQuestionChoice_0(id, qid, type, label);

        // TODO: test validations
    }
    
    /**
     * Create Survey Question
     *
     * Create a question in a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSurveyQuestion_0Test() throws ApiException {
        String id = null;
        String question = null;
        String attributeName = null;
        InlineResponse20115 response = api.createSurveyQuestion_0(id, question, attributeName);

        // TODO: test validations
    }
    
    /**
     * Create Survey Response
     *
     * Create a response in a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSurveyResponseTest() throws ApiException {
        String id = null;
        String questionId = null;
        String choiceId = null;
        String contactId = null;
        String answer = null;
        InlineResponse20116 response = api.createSurveyResponse(id, questionId, choiceId, contactId, answer);

        // TODO: test validations
    }
    
    /**
     * Create Survey Response
     *
     * Create a response in a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSurveyResponse_0Test() throws ApiException {
        String id = null;
        String questionId = null;
        String choiceId = null;
        String contactId = null;
        String answer = null;
        InlineResponse20116 response = api.createSurveyResponse_0(id, questionId, choiceId, contactId, answer);

        // TODO: test validations
    }
    
    /**
     * Create Survey
     *
     * Create a survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSurvey_0Test() throws ApiException {
        String title = null;
        List<String> contacts = null;
        InlineResponse2016 response = api.createSurvey_0(title, contacts);

        // TODO: test validations
    }
    
    /**
     * Delete Survey
     *
     * Delete a survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSurveyTest() throws ApiException {
        String id = null;
        InlineResponse2016 response = api.deleteSurvey(id);

        // TODO: test validations
    }
    
    /**
     * Delete Survey Question
     *
     * Delete a question from a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSurveyQuestionTest() throws ApiException {
        String id = null;
        String qid = null;
        InlineResponse20115 response = api.deleteSurveyQuestion(id, qid);

        // TODO: test validations
    }
    
    /**
     * Delete Survey Question Choice
     *
     * Delete a choice for a given survey question.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSurveyQuestionChoiceTest() throws ApiException {
        String id = null;
        String qid = null;
        String cid = null;
        InlineResponse20117 response = api.deleteSurveyQuestionChoice(id, qid, cid);

        // TODO: test validations
    }
    
    /**
     * Delete Survey Question Choice
     *
     * Delete a choice for a given survey question.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSurveyQuestionChoice_0Test() throws ApiException {
        String id = null;
        String qid = null;
        String cid = null;
        InlineResponse20117 response = api.deleteSurveyQuestionChoice_0(id, qid, cid);

        // TODO: test validations
    }
    
    /**
     * Delete Survey Question
     *
     * Delete a question from a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSurveyQuestion_0Test() throws ApiException {
        String id = null;
        String qid = null;
        InlineResponse20115 response = api.deleteSurveyQuestion_0(id, qid);

        // TODO: test validations
    }
    
    /**
     * Delete Survey
     *
     * Delete a survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSurvey_0Test() throws ApiException {
        String id = null;
        InlineResponse2016 response = api.deleteSurvey_0(id);

        // TODO: test validations
    }
    
    /**
     * Get Survey
     *
     * Get information about a survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveyTest() throws ApiException {
        String id = null;
        Boolean associations = null;
        InlineResponse2016 response = api.getSurvey(id, associations);

        // TODO: test validations
    }
    
    /**
     * Get Survey Contacts
     *
     * Get a list of contacts for a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveyContactsTest() throws ApiException {
        String id = null;
        InlineResponse2004 response = api.getSurveyContacts(id);

        // TODO: test validations
    }
    
    /**
     * Get Survey Contacts
     *
     * Get a list of contacts for a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveyContacts_0Test() throws ApiException {
        String id = null;
        InlineResponse2004 response = api.getSurveyContacts_0(id);

        // TODO: test validations
    }
    
    /**
     * Get Survey Question Choices
     *
     * Get a list of all choices for a given survey question.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveyQuestionChoicesTest() throws ApiException {
        String id = null;
        String qid = null;
        InlineResponse20016 response = api.getSurveyQuestionChoices(id, qid);

        // TODO: test validations
    }
    
    /**
     * Get Survey Question Choices
     *
     * Get a list of all choices for a given survey question.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveyQuestionChoices_0Test() throws ApiException {
        String id = null;
        String qid = null;
        InlineResponse20016 response = api.getSurveyQuestionChoices_0(id, qid);

        // TODO: test validations
    }
    
    /**
     * Get Survey Questions
     *
     * Get a list of questions for a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveyQuestionsTest() throws ApiException {
        String id = null;
        InlineResponse20013 response = api.getSurveyQuestions(id);

        // TODO: test validations
    }
    
    /**
     * Get Survey Questions
     *
     * Get a list of questions for a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveyQuestions_0Test() throws ApiException {
        String id = null;
        InlineResponse20013 response = api.getSurveyQuestions_0(id);

        // TODO: test validations
    }
    
    /**
     * Get Survey Responses
     *
     * Get a list of responses for a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveyResponsesTest() throws ApiException {
        String id = null;
        InlineResponse20014 response = api.getSurveyResponses(id);

        // TODO: test validations
    }
    
    /**
     * Get Survey Responses
     *
     * Get a list of responses for a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveyResponses_0Test() throws ApiException {
        String id = null;
        InlineResponse20014 response = api.getSurveyResponses_0(id);

        // TODO: test validations
    }
    
    /**
     * Get Survey
     *
     * Get information about a survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurvey_0Test() throws ApiException {
        String id = null;
        Boolean associations = null;
        InlineResponse2016 response = api.getSurvey_0(id, associations);

        // TODO: test validations
    }
    
    /**
     * Get Surveys
     *
     * Get a list of surveys.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveysTest() throws ApiException {
        InlineResponse2003 response = api.getSurveys();

        // TODO: test validations
    }
    
    /**
     * Get Surveys
     *
     * Get a list of surveys.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getSurveys_0Test() throws ApiException {
        InlineResponse2003 response = api.getSurveys_0();

        // TODO: test validations
    }
    
    /**
     * Update Survey
     *
     * Update a survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSurveyTest() throws ApiException {
        String id = null;
        String title = null;
        List<String> contacts = null;
        InlineResponse2016 response = api.updateSurvey(id, title, contacts);

        // TODO: test validations
    }
    
    /**
     * Update Survey Question
     *
     * Update a question for a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSurveyQuestionTest() throws ApiException {
        String id = null;
        String qid = null;
        String question = null;
        String attributeName = null;
        InlineResponse20115 response = api.updateSurveyQuestion(id, qid, question, attributeName);

        // TODO: test validations
    }
    
    /**
     * Update Survey Question Choice
     *
     * Update a choice for a given survey question.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSurveyQuestionChoiceTest() throws ApiException {
        String id = null;
        String qid = null;
        String cid = null;
        String type = null;
        String label = null;
        InlineResponse20117 response = api.updateSurveyQuestionChoice(id, qid, cid, type, label);

        // TODO: test validations
    }
    
    /**
     * Update Survey Question Choice
     *
     * Update a choice for a given survey question.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSurveyQuestionChoice_0Test() throws ApiException {
        String id = null;
        String qid = null;
        String cid = null;
        String type = null;
        String label = null;
        InlineResponse20117 response = api.updateSurveyQuestionChoice_0(id, qid, cid, type, label);

        // TODO: test validations
    }
    
    /**
     * Update Survey Question
     *
     * Update a question for a given survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSurveyQuestion_0Test() throws ApiException {
        String id = null;
        String qid = null;
        String question = null;
        String attributeName = null;
        InlineResponse20115 response = api.updateSurveyQuestion_0(id, qid, question, attributeName);

        // TODO: test validations
    }
    
    /**
     * Update Survey
     *
     * Update a survey.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateSurvey_0Test() throws ApiException {
        String id = null;
        String title = null;
        List<String> contacts = null;
        InlineResponse2016 response = api.updateSurvey_0(id, title, contacts);

        // TODO: test validations
    }
    
}
