/*
 * FoneStorm API 2.4.0 (Thunder)
 * FracTEL's Middleware API
 *
 * OpenAPI spec version: 2.4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Error;
import io.swagger.client.model.InlineResponse2007;
import io.swagger.client.model.InlineResponse20110;
import org.joda.time.LocalDate;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CampaignsApi
 */
@Ignore
public class CampaignsApiTest {

    private final CampaignsApi api = new CampaignsApi();

    
    /**
     * Create Campaign
     *
     * Create a campaign.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCampaignTest() throws ApiException {
        String name = null;
        LocalDate startTime = null;
        LocalDate endTime = null;
        String listId = null;
        InlineResponse20110 response = api.createCampaign(name, startTime, endTime, listId);

        // TODO: test validations
    }
    
    /**
     * Create Campaign
     *
     * Create a campaign.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCampaign_0Test() throws ApiException {
        String name = null;
        LocalDate startTime = null;
        LocalDate endTime = null;
        String listId = null;
        InlineResponse20110 response = api.createCampaign_0(name, startTime, endTime, listId);

        // TODO: test validations
    }
    
    /**
     * Delete Campaign
     *
     * Delete a campaign.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCampaignTest() throws ApiException {
        String id = null;
        InlineResponse20110 response = api.deleteCampaign(id);

        // TODO: test validations
    }
    
    /**
     * Delete Campaign
     *
     * Delete a campaign.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteCampaign_0Test() throws ApiException {
        String id = null;
        InlineResponse20110 response = api.deleteCampaign_0(id);

        // TODO: test validations
    }
    
    /**
     * Get Campaign
     *
     * Get information about a campaign.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignTest() throws ApiException {
        String id = null;
        InlineResponse20110 response = api.getCampaign(id);

        // TODO: test validations
    }
    
    /**
     * Get Campaign
     *
     * Get information about a campaign.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaign_0Test() throws ApiException {
        String id = null;
        InlineResponse20110 response = api.getCampaign_0(id);

        // TODO: test validations
    }
    
    /**
     * Get Campaigns
     *
     * Get a list of all campaigns.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaignsTest() throws ApiException {
        InlineResponse2007 response = api.getCampaigns();

        // TODO: test validations
    }
    
    /**
     * Get Campaigns
     *
     * Get a list of all campaigns.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCampaigns_0Test() throws ApiException {
        InlineResponse2007 response = api.getCampaigns_0();

        // TODO: test validations
    }
    
    /**
     * Update Campaign
     *
     * Update a campaign.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCampaignTest() throws ApiException {
        String id = null;
        String name = null;
        LocalDate startTime = null;
        LocalDate endTime = null;
        String listId = null;
        InlineResponse20110 response = api.updateCampaign(id, name, startTime, endTime, listId);

        // TODO: test validations
    }
    
    /**
     * Update Campaign
     *
     * Update a campaign.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCampaign_0Test() throws ApiException {
        String id = null;
        String name = null;
        LocalDate startTime = null;
        LocalDate endTime = null;
        String listId = null;
        InlineResponse20110 response = api.updateCampaign_0(id, name, startTime, endTime, listId);

        // TODO: test validations
    }
    
}
