/*
 * FracTEL API 2.1.0
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FonenumbersApi
 */
@Ignore
public class FonenumbersApiTest {

    private final FonenumbersApi api = new FonenumbersApi();

    
    /**
     * Remove fonenumber from the account.
     *
     * Returns a JSON response
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteFonenumbersFonenumberTest() throws ApiException {
        String fonenumber = null;
        String response = api.deleteFonenumbersFonenumber(fonenumber);

        // TODO: test validations
    }
    
    /**
     * Get all active fonenumbers listed under the account.
     *
     * Returns a JSON response
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFonenumbersTest() throws ApiException {
        String filter = null;
        String response = api.getFonenumbers(filter);

        // TODO: test validations
    }
    
    /**
     * Get a single fonenumber listed under the account.
     *
     * Returns a JSON response
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getFonenumbersFonenumberTest() throws ApiException {
        String fonenumber = null;
        String response = api.getFonenumbersFonenumber(fonenumber);

        // TODO: test validations
    }
    
    /**
     * Order quick fonenumber for the account.
     *
     * Returns a JSON response
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postFonenumbersTest() throws ApiException {
        String areaCode = null;
        String response = api.postFonenumbers(areaCode);

        // TODO: test validations
    }
    
    /**
     * Configure the service type for an account fonenumber.
     *
     * Returns a JSON response
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putFonenumbersFonenumberTest() throws ApiException {
        String fonenumber = null;
        String type = null;
        String value = null;
        String urlMethod = null;
        String urlUsername = null;
        String urlPassword = null;
        String response = api.putFonenumbersFonenumber(fonenumber, type, value, urlMethod, urlUsername, urlPassword);

        // TODO: test validations
    }
    
}
