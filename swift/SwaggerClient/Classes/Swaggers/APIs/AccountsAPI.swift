//
// AccountsAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class AccountsAPI: APIBase {
    /**
     Set CDR Callback
     
     - parameter accountId: (form) FoneStorm account id 
     - parameter method: (form) Callback URL method 
     - parameter url: (form) Callback URL. See **Notes** for additional information. 
     - parameter username: (form) Callback URL username (optional)
     - parameter password: (form) Callback URL password (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func configureAccountCdrNotify(accountId accountId: String, method: String, url: String, username: String? = nil, password: String? = nil, completion: ((data: InlineResponse2001?, error: ErrorType?) -> Void)) {
        configureAccountCdrNotifyWithRequestBuilder(accountId: accountId, method: method, url: url, username: username, password: password).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Set CDR Callback
     - POST /accounts/cdr_notify
     - Configure the callback URL to notify when a call dialing record is available.
     - API Key:
       - type: apiKey token 
       - name: jwt
     - examples: [{contentType=application/json, example={
  "account" : {
    "cdr_notify_method" : "aeiou",
    "background_color" : "aeiou",
    "cdr_notify_url" : "aeiou",
    "cdr_notify_username" : "aeiou",
    "secondary_color" : "aeiou",
    "id" : "aeiou",
    "cdr_notify_password" : "aeiou",
    "font_family" : "aeiou",
    "primary_color" : "aeiou"
  }
}}]
     
     - parameter accountId: (form) FoneStorm account id 
     - parameter method: (form) Callback URL method 
     - parameter url: (form) Callback URL. See **Notes** for additional information. 
     - parameter username: (form) Callback URL username (optional)
     - parameter password: (form) Callback URL password (optional)

     - returns: RequestBuilder<InlineResponse2001> 
     */
    public class func configureAccountCdrNotifyWithRequestBuilder(accountId accountId: String, method: String, url: String, username: String? = nil, password: String? = nil) -> RequestBuilder<InlineResponse2001> {
        let path = "/accounts/cdr_notify"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "account_id": accountId,
            "method": method,
            "url": url,
            "username": username,
            "password": password
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2001>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Set CDR Callback
     
     - parameter accountId: (form) FoneStorm account id 
     - parameter method: (form) Callback URL method 
     - parameter url: (form) Callback URL. See **Notes** for additional information. 
     - parameter username: (form) Callback URL username (optional)
     - parameter password: (form) Callback URL password (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func configureAccountCdrNotify_0(accountId accountId: String, method: String, url: String, username: String? = nil, password: String? = nil, completion: ((data: InlineResponse2001?, error: ErrorType?) -> Void)) {
        configureAccountCdrNotify_0WithRequestBuilder(accountId: accountId, method: method, url: url, username: username, password: password).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Set CDR Callback
     - POST /accounts/cdr_notify
     - Configure the callback URL to notify when a call dialing record is available.
     - API Key:
       - type: apiKey token 
       - name: jwt
     - examples: [{contentType=application/json, example={
  "account" : {
    "cdr_notify_method" : "aeiou",
    "background_color" : "aeiou",
    "cdr_notify_url" : "aeiou",
    "cdr_notify_username" : "aeiou",
    "secondary_color" : "aeiou",
    "id" : "aeiou",
    "cdr_notify_password" : "aeiou",
    "font_family" : "aeiou",
    "primary_color" : "aeiou"
  }
}}]
     
     - parameter accountId: (form) FoneStorm account id 
     - parameter method: (form) Callback URL method 
     - parameter url: (form) Callback URL. See **Notes** for additional information. 
     - parameter username: (form) Callback URL username (optional)
     - parameter password: (form) Callback URL password (optional)

     - returns: RequestBuilder<InlineResponse2001> 
     */
    public class func configureAccountCdrNotify_0WithRequestBuilder(accountId accountId: String, method: String, url: String, username: String? = nil, password: String? = nil) -> RequestBuilder<InlineResponse2001> {
        let path = "/accounts/cdr_notify"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "account_id": accountId,
            "method": method,
            "url": url,
            "username": username,
            "password": password
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2001>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Get Account
     
     - parameter id: (path) Account id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAccount(id id: String, completion: ((data: InlineResponse2001?, error: ErrorType?) -> Void)) {
        getAccountWithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get Account
     - GET /accounts/{id}
     - Get information about an account.
     - API Key:
       - type: apiKey token 
       - name: jwt
     - examples: [{contentType=application/json, example={
  "account" : {
    "cdr_notify_method" : "aeiou",
    "background_color" : "aeiou",
    "cdr_notify_url" : "aeiou",
    "cdr_notify_username" : "aeiou",
    "secondary_color" : "aeiou",
    "id" : "aeiou",
    "cdr_notify_password" : "aeiou",
    "font_family" : "aeiou",
    "primary_color" : "aeiou"
  }
}}]
     
     - parameter id: (path) Account id 

     - returns: RequestBuilder<InlineResponse2001> 
     */
    public class func getAccountWithRequestBuilder(id id: String) -> RequestBuilder<InlineResponse2001> {
        var path = "/accounts/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2001>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Get Account
     
     - parameter id: (path) Account id 
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getAccount_0(id id: String, completion: ((data: InlineResponse2001?, error: ErrorType?) -> Void)) {
        getAccount_0WithRequestBuilder(id: id).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Get Account
     - GET /accounts/{id}
     - Get information about an account.
     - API Key:
       - type: apiKey token 
       - name: jwt
     - examples: [{contentType=application/json, example={
  "account" : {
    "cdr_notify_method" : "aeiou",
    "background_color" : "aeiou",
    "cdr_notify_url" : "aeiou",
    "cdr_notify_username" : "aeiou",
    "secondary_color" : "aeiou",
    "id" : "aeiou",
    "cdr_notify_password" : "aeiou",
    "font_family" : "aeiou",
    "primary_color" : "aeiou"
  }
}}]
     
     - parameter id: (path) Account id 

     - returns: RequestBuilder<InlineResponse2001> 
     */
    public class func getAccount_0WithRequestBuilder(id id: String) -> RequestBuilder<InlineResponse2001> {
        var path = "/accounts/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2001>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**
     Update Account
     
     - parameter id: (path) Account id 
     - parameter primaryColor: (form) Branding primary color (optional)
     - parameter secondaryColor: (form) Branding secondary color (optional)
     - parameter backgroundColor: (form) Branding background color (optional)
     - parameter fontFamily: (form) Branding font family (optional)
     - parameter logo: (form) Branding logo (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateAccount(id id: String, primaryColor: String? = nil, secondaryColor: String? = nil, backgroundColor: String? = nil, fontFamily: String? = nil, logo: String? = nil, completion: ((data: InlineResponse2001?, error: ErrorType?) -> Void)) {
        updateAccountWithRequestBuilder(id: id, primaryColor: primaryColor, secondaryColor: secondaryColor, backgroundColor: backgroundColor, fontFamily: fontFamily, logo: logo).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update Account
     - PUT /accounts/{id}
     - Update an account.
     - API Key:
       - type: apiKey token 
       - name: jwt
     - examples: [{contentType=application/json, example={
  "account" : {
    "cdr_notify_method" : "aeiou",
    "background_color" : "aeiou",
    "cdr_notify_url" : "aeiou",
    "cdr_notify_username" : "aeiou",
    "secondary_color" : "aeiou",
    "id" : "aeiou",
    "cdr_notify_password" : "aeiou",
    "font_family" : "aeiou",
    "primary_color" : "aeiou"
  }
}}]
     
     - parameter id: (path) Account id 
     - parameter primaryColor: (form) Branding primary color (optional)
     - parameter secondaryColor: (form) Branding secondary color (optional)
     - parameter backgroundColor: (form) Branding background color (optional)
     - parameter fontFamily: (form) Branding font family (optional)
     - parameter logo: (form) Branding logo (optional)

     - returns: RequestBuilder<InlineResponse2001> 
     */
    public class func updateAccountWithRequestBuilder(id id: String, primaryColor: String? = nil, secondaryColor: String? = nil, backgroundColor: String? = nil, fontFamily: String? = nil, logo: String? = nil) -> RequestBuilder<InlineResponse2001> {
        var path = "/accounts/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "primary_color": primaryColor,
            "secondary_color": secondaryColor,
            "background_color": backgroundColor,
            "font_family": fontFamily,
            "logo": logo
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2001>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Update Account
     
     - parameter id: (path) Account id 
     - parameter primaryColor: (form) Branding primary color (optional)
     - parameter secondaryColor: (form) Branding secondary color (optional)
     - parameter backgroundColor: (form) Branding background color (optional)
     - parameter fontFamily: (form) Branding font family (optional)
     - parameter logo: (form) Branding logo (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func updateAccount_0(id id: String, primaryColor: String? = nil, secondaryColor: String? = nil, backgroundColor: String? = nil, fontFamily: String? = nil, logo: String? = nil, completion: ((data: InlineResponse2001?, error: ErrorType?) -> Void)) {
        updateAccount_0WithRequestBuilder(id: id, primaryColor: primaryColor, secondaryColor: secondaryColor, backgroundColor: backgroundColor, fontFamily: fontFamily, logo: logo).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Update Account
     - PUT /accounts/{id}
     - Update an account.
     - API Key:
       - type: apiKey token 
       - name: jwt
     - examples: [{contentType=application/json, example={
  "account" : {
    "cdr_notify_method" : "aeiou",
    "background_color" : "aeiou",
    "cdr_notify_url" : "aeiou",
    "cdr_notify_username" : "aeiou",
    "secondary_color" : "aeiou",
    "id" : "aeiou",
    "cdr_notify_password" : "aeiou",
    "font_family" : "aeiou",
    "primary_color" : "aeiou"
  }
}}]
     
     - parameter id: (path) Account id 
     - parameter primaryColor: (form) Branding primary color (optional)
     - parameter secondaryColor: (form) Branding secondary color (optional)
     - parameter backgroundColor: (form) Branding background color (optional)
     - parameter fontFamily: (form) Branding font family (optional)
     - parameter logo: (form) Branding logo (optional)

     - returns: RequestBuilder<InlineResponse2001> 
     */
    public class func updateAccount_0WithRequestBuilder(id id: String, primaryColor: String? = nil, secondaryColor: String? = nil, backgroundColor: String? = nil, fontFamily: String? = nil, logo: String? = nil) -> RequestBuilder<InlineResponse2001> {
        var path = "/accounts/{id}"
        path = path.stringByReplacingOccurrencesOfString("{id}", withString: "\(id)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "primary_color": primaryColor,
            "secondary_color": secondaryColor,
            "background_color": backgroundColor,
            "font_family": fontFamily,
            "logo": logo
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<InlineResponse2001>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "PUT", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
