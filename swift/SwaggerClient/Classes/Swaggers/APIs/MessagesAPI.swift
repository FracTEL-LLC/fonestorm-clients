//
// MessagesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class MessagesAPI: APIBase {
    /**
     * enum for parameter type
     */
    public enum ModelType_postMessagesReceive: String { 
        case None = "None"
        case Device = "Device"
        case Email = "Email"
        case Url = "URL"
        case Forward = "Forward"
    }

    /**
     * enum for parameter urlMethod
     */
    public enum UrlMethod_postMessagesReceive: String { 
        case Get = "GET"
        case Post = "POST"
        case Json = "JSON"
    }

    /**
     Configure the delivery service type used as the destination for received messages.
     
     - parameter fonenumber: (form) Your FracTEL phone number. 
     - parameter type: (form) Message routing type. 
     - parameter value: (form) Message routing type value. (optional)
     - parameter urlMethod: (form) URL method when type is URL. (optional)
     - parameter urlUsername: (form) Optional URL username when type is URL. (optional)
     - parameter urlPassword: (form) Optional URL password when type is URL. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postMessagesReceive(fonenumber fonenumber: String, type: ModelType_postMessagesReceive, value: String? = nil, urlMethod: UrlMethod_postMessagesReceive? = nil, urlUsername: String? = nil, urlPassword: String? = nil, completion: ((data: String?, error: ErrorType?) -> Void)) {
        postMessagesReceiveWithRequestBuilder(fonenumber: fonenumber, type: type, value: value, urlMethod: urlMethod, urlUsername: urlUsername, urlPassword: urlPassword).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Configure the delivery service type used as the destination for received messages.
     - POST /messages/receive
     - Returns a JSON response
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter fonenumber: (form) Your FracTEL phone number. 
     - parameter type: (form) Message routing type. 
     - parameter value: (form) Message routing type value. (optional)
     - parameter urlMethod: (form) URL method when type is URL. (optional)
     - parameter urlUsername: (form) Optional URL username when type is URL. (optional)
     - parameter urlPassword: (form) Optional URL password when type is URL. (optional)

     - returns: RequestBuilder<String> 
     */
    public class func postMessagesReceiveWithRequestBuilder(fonenumber fonenumber: String, type: ModelType_postMessagesReceive, value: String? = nil, urlMethod: UrlMethod_postMessagesReceive? = nil, urlUsername: String? = nil, urlPassword: String? = nil) -> RequestBuilder<String> {
        let path = "/messages/receive"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "fonenumber": fonenumber,
            "type": type.rawValue,
            "value": value,
            "url_method": urlMethod?.rawValue,
            "url_username": urlUsername,
            "url_password": urlPassword
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter method
     */
    public enum Method_postMessagesReceiveNotify: String { 
        case Get = "GET"
        case Post = "POST"
        case Json = "JSON"
    }

    /**
     Configure the callback URL to notify when a message is received.
     
     - parameter fonenumber: (form) Your FracTEL phone number. 
     - parameter method: (form) Callback URL method. 
     - parameter url: (form) Callback URL. 
     - parameter urlUsername: (form) Callback URL username. (optional)
     - parameter urlPassword: (form) Callback URL password. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postMessagesReceiveNotify(fonenumber fonenumber: String, method: Method_postMessagesReceiveNotify, url: String, urlUsername: String? = nil, urlPassword: String? = nil, completion: ((data: String?, error: ErrorType?) -> Void)) {
        postMessagesReceiveNotifyWithRequestBuilder(fonenumber: fonenumber, method: method, url: url, urlUsername: urlUsername, urlPassword: urlPassword).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Configure the callback URL to notify when a message is received.
     - POST /messages/receive_notify
     - Returns a JSON response
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter fonenumber: (form) Your FracTEL phone number. 
     - parameter method: (form) Callback URL method. 
     - parameter url: (form) Callback URL. 
     - parameter urlUsername: (form) Callback URL username. (optional)
     - parameter urlPassword: (form) Callback URL password. (optional)

     - returns: RequestBuilder<String> 
     */
    public class func postMessagesReceiveNotifyWithRequestBuilder(fonenumber fonenumber: String, method: Method_postMessagesReceiveNotify, url: String, urlUsername: String? = nil, urlPassword: String? = nil) -> RequestBuilder<String> {
        let path = "/messages/receive_notify"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "fonenumber": fonenumber,
            "method": method.rawValue,
            "url": url,
            "url_username": urlUsername,
            "url_password": urlPassword
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     Send an SMS or MMS message to a recipient.
     
     - parameter to: (form) The recipient&#39;s 10 digits phone number. 
     - parameter fonenumber: (form) Your FracTEL phone number to use as from 
     - parameter message: (form) Content of SMS 
     - parameter mediaUrl: (form) URL for media for send via SMS (up to 10) (optional)
     - parameter confirmationUrl: (form) Callback URL for confirmation (optional)
     - parameter confirmationUrlUsername: (form) Callback URL username for confirmation (optional)
     - parameter confirmationUrlPassword: (form) Callback URL password for confirmation (optional)
     - parameter requireConfirmation: (form) Only send message if confirmation is available (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postMessagesSend(to to: String, fonenumber: String, message: String, mediaUrl: [String]? = nil, confirmationUrl: String? = nil, confirmationUrlUsername: String? = nil, confirmationUrlPassword: String? = nil, requireConfirmation: Bool? = nil, completion: ((data: String?, error: ErrorType?) -> Void)) {
        postMessagesSendWithRequestBuilder(to: to, fonenumber: fonenumber, message: message, mediaUrl: mediaUrl, confirmationUrl: confirmationUrl, confirmationUrlUsername: confirmationUrlUsername, confirmationUrlPassword: confirmationUrlPassword, requireConfirmation: requireConfirmation).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Send an SMS or MMS message to a recipient.
     - POST /messages/send
     - Returns a JSON response
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter to: (form) The recipient&#39;s 10 digits phone number. 
     - parameter fonenumber: (form) Your FracTEL phone number to use as from 
     - parameter message: (form) Content of SMS 
     - parameter mediaUrl: (form) URL for media for send via SMS (up to 10) (optional)
     - parameter confirmationUrl: (form) Callback URL for confirmation (optional)
     - parameter confirmationUrlUsername: (form) Callback URL username for confirmation (optional)
     - parameter confirmationUrlPassword: (form) Callback URL password for confirmation (optional)
     - parameter requireConfirmation: (form) Only send message if confirmation is available (optional)

     - returns: RequestBuilder<String> 
     */
    public class func postMessagesSendWithRequestBuilder(to to: String, fonenumber: String, message: String, mediaUrl: [String]? = nil, confirmationUrl: String? = nil, confirmationUrlUsername: String? = nil, confirmationUrlPassword: String? = nil, requireConfirmation: Bool? = nil) -> RequestBuilder<String> {
        let path = "/messages/send"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "to": to,
            "fonenumber": fonenumber,
            "message": message,
            "media_url": mediaUrl,
            "confirmation_url": confirmationUrl,
            "confirmation_url_username": confirmationUrlUsername,
            "confirmation_url_password": confirmationUrlPassword,
            "require_confirmation": requireConfirmation
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

    /**
     * enum for parameter method
     */
    public enum Method_postMessagesSendNotify: String { 
        case Get = "GET"
        case Post = "POST"
        case Json = "JSON"
    }

    /**
     Configure the callback URL to notify when a message is sent.
     
     - parameter fonenumber: (form) Your FracTEL phone number 
     - parameter method: (form) Callback URL method. 
     - parameter url: (form) Callback URL. 
     - parameter urlUsername: (form) Callback URL username. (optional)
     - parameter urlPassword: (form) Callback URL password. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func postMessagesSendNotify(fonenumber fonenumber: String, method: Method_postMessagesSendNotify, url: String, urlUsername: String? = nil, urlPassword: String? = nil, completion: ((data: String?, error: ErrorType?) -> Void)) {
        postMessagesSendNotifyWithRequestBuilder(fonenumber: fonenumber, method: method, url: url, urlUsername: urlUsername, urlPassword: urlPassword).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     Configure the callback URL to notify when a message is sent.
     - POST /messages/send_notify
     - Returns a JSON response
     - examples: [{contentType=application/json, example="aeiou"}]
     
     - parameter fonenumber: (form) Your FracTEL phone number 
     - parameter method: (form) Callback URL method. 
     - parameter url: (form) Callback URL. 
     - parameter urlUsername: (form) Callback URL username. (optional)
     - parameter urlPassword: (form) Callback URL password. (optional)

     - returns: RequestBuilder<String> 
     */
    public class func postMessagesSendNotifyWithRequestBuilder(fonenumber fonenumber: String, method: Method_postMessagesSendNotify, url: String, urlUsername: String? = nil, urlPassword: String? = nil) -> RequestBuilder<String> {
        let path = "/messages/send_notify"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "fonenumber": fonenumber,
            "method": method.rawValue,
            "url": url,
            "url_username": urlUsername,
            "url_password": urlPassword
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<String>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "POST", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
